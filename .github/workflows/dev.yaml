name: build push dev image

on:
  push:
    branches:
      - 'issue1'

jobs:
  container:
      runs-on: ubuntu-latest
      image: gsscogs/pythonversiontesting
      steps:

      - name: setting python version
        run: python:3.9

      - name: Install poetry
        run: |
          pip install poetry
          poetry export --format requirements.txt --without-hashes -o /requirements.txt
          pip install --requirement /requirements.txt
          pip install --no-deps --use-feature=in-tree-build /workspace/. 

      - name: Run pyright
        run: poetry run pyright . --lib

      - name: Run unittests
        run: poetry run pytest --junitxml=pytest_results_pmd.xml

      - name: Run behaviour tests
        run: poetry run poetry run behave tests/features --tags=-skip -f json.cucumber -o tests/behaviour/test-results.json
      
  dev:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build pmdutils:dev
        uses: docker/build-push-action@v2
        id: docker_build_dev
        with:
          context: .
          file: deploydocker/Dockerfile
          push: true
          build-args: dev=true
          tags: |
            gsscogs/pmdutils:dev
      - name: Develop Image digest
        run: echo ${{ steps.docker_build_dev.outputs.digest }}